{"version":3,"sources":["components/navigation/navigation.js","UI/highChart/highChart.js","redux-store/acitonTypes.js","utils/endpoints.js","utils/monthConst.js","redux-store/actions/actions.js","UI/loader/loader.js","components/analytics/analytics.js","UI/table/table.js","components/list/list.js","UI/button/button.js","components/dashboard/dashboard.js","components/router/router.js","container/layout/layout.js","App.js","reportWebVitals.js","utils/updateState.js","redux-store/reducer/listReducer.js","index.js"],"names":["Navigation","className","to","activeClassName","exact","HighChart","props","highcharts","Highcharts","options","SET_RECORDS","SET_IS_LOADING","SET_IS_ERROR","SET_ERROR_MESSAGE","SET_ANALYTICS","HOST","ENDPOINTS","months","getData","dispatch","url","API","setIsLoading","axios","get","then","res","data","status","setIsError","setErrorMessage","err","setRecords","setAnalytics","catch","records","activeRecords","filter","el","ActiveIndicator","length","inactiveRecords","stats","groupStats","reduce","r","a","month","Date","Effective_date","getMonth","Object","create","forEach","push","y","setRecordAnalytics","inActiveRecords","type","actions","payload","isError","error","isLoading","Loader","connect","state","errorMessage","useEffect","pieChartOptions","chart","title","text","series","name","lineChartOptions","xAxis","categories","from","pageNo","Table","paginationLength","maxPages","Math","ceil","rows","useState","setRowsToDisplay","table","headers","keys","map","header","index","colSpan","slice","row","onClick","onExpiryClick","onDeleteClick","id","params","post","onGetData","Button","clickHandler","label","onGenerateData","onResetData","onDeleteData","onExpireData","Router","path","component","Dashboard","Analytics","List","Layout","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateState","update","initialState","recordReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b94884cb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './navigation.css';\n\nconst Navigation = () => {\n    return (\n        <div className='Navbar'>\n            <nav className='navTab'>\n                <NavLink to='/' activeClassName=\"activeTab\" exact>Dashboard</NavLink>\n                <NavLink to='/analytics' activeClassName=\"activeTab\">Analytics</NavLink>\n                <NavLink to='/list' activeClassName=\"activeTab\">List</NavLink>\n            </nav>\n        </div>\n    );\n}\nexport default Navigation;","import React, { Fragment } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport './highChart.css';\n\nconst HighChart = (props) => {\n    return (\n        <Fragment>\n            <div className='chartContainer'>\n                <HighchartsReact highcharts={Highcharts} options={props.options}/>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default HighChart;","export const SET_RECORDS = 'SET_RECORDS';\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\nexport const SET_IS_ERROR = 'SET_IS_ERROR';\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nexport const SET_ANALYTICS = 'SET_ANALYTICS';","// export const HOST = 'http://localhost:5000/records';\nexport const HOST = ' https://test-application-nirmal.herokuapp.com/records';\n\nexport const ENDPOINTS = {\n    GENERATE_DATA: '/generateValues',\n    GET_DATA: '/getValues',\n    DELETE_ALL: '/resetTable',\n    SET_EXPIRY_ALL: '/setExpiryAll',\n    SET_INACTIVE_ALL: '/setInactiveAll',\n    SET_EXPIRY: '/setExpiry',\n    SET_INACTIVE: '/setInactive'\n}","const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec']\n\nexport default months;","import * as actions from '../acitonTypes';\nimport axios from 'axios';\n\nimport * as API from '../../utils/endpoints';\nimport months from '../../utils/monthConst';\n\nexport const onGenerateData = () => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.GENERATE_DATA}`;\n        dispatch(setIsLoading(true));\n        axios.get(url).then(res => {\n            dispatch(setIsLoading(false));\n            if (res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n                dispatch(setIsError(false));\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage('Something went wrong'));\n        })\n    }\n}\n\nexport const onResetData = () => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.DELETE_ALL}`;\n        dispatch(setIsLoading(true));\n        axios.get(url).then(res => {\n            dispatch(setIsLoading(false));\n            if (res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n                dispatch(setIsError(false));\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage('Something went wrong'));\n        })\n    }\n}\n\nexport const onDeleteData = () => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.SET_INACTIVE_ALL}`;\n        dispatch(setIsLoading(true));\n        axios.get(url).then(res => {\n            dispatch(setIsLoading(false));\n            if (res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n                dispatch(setIsError(false));\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage('Something went wrong'));\n        })\n    }\n}\n\nexport const onDeleteDataById = (id) => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.SET_INACTIVE}`;\n        dispatch(setIsLoading(true));\n        const params = {\n            id: id\n        }\n        axios.post(url, params).then(res => {\n            dispatch(setIsLoading(false));\n            if (res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n                dispatch(setIsError(false));\n                dispatch(getData());\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage(res.err));\n        })\n    }\n}\n\nexport const onExpireData = () => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.SET_EXPIRY_ALL}`;\n        dispatch(setIsLoading(true));\n        axios.get(url).then(res => {\n            dispatch(setIsLoading(false));\n            if (res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n                dispatch(setIsError(false));\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage('Something went wrong'));\n        })\n    }\n}\n\nexport const onExpireDataById = (id) => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.SET_EXPIRY}`;\n        dispatch(setIsLoading(true));\n        const params = {\n            id: id\n        }\n        axios.post(url, params).then(res => {\n            dispatch(setIsLoading(false));\n            if (res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n                dispatch(setIsError(false));\n                dispatch(getData());\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage('Something went wrong'));\n        })\n    }\n}\n\nexport const getData = () => {\n    return dispatch => {\n        const url = `${API.HOST}${API.ENDPOINTS.GET_DATA}`;\n        dispatch(setIsLoading(true));\n        axios.get(url).then(res => {\n            dispatch(setIsLoading(false));\n            if(res.data.status === 'FAILED') {\n                dispatch(setIsError(true));\n                dispatch(setErrorMessage(res.data.err));\n            } else {\n            dispatch(setRecords(res.data.data.data));\n            setAnalytics(dispatch, res.data.data.data);\n            dispatch(setIsError(false));\n            }\n        }).catch(res => {\n            dispatch(setIsLoading(false));\n            dispatch(setIsError(true));\n            dispatch(setErrorMessage('Something went wrong'));\n        })\n    }\n}\n\nconst setAnalytics = (dispatch, records) => {\n    let activeRecords = records.filter(el => el.ActiveIndicator === 'Y').length;\n    let inactiveRecords = records.length - activeRecords;\n    let stats = [];\n    let groupStats = records.reduce(function (r, a) {\n        if (a.ActiveIndicator === 'Y') {\n            let month = months[new Date(a.Effective_date).getMonth()];\n            r[month] = r[month] || 0;\n            r[month]++;\n        }\n        return r;\n    }, Object.create(null));\n\n    months.forEach(month => {\n        stats.push({\n            month: month,\n            y: groupStats[month] || 0\n        })\n    });;\n\n    dispatch(setRecordAnalytics({\n        activeRecords: activeRecords,\n        inActiveRecords: inactiveRecords,\n        stats: stats\n    }))\n}\n\nexport const setRecords = (records) => {\n    return {\n        type: actions.SET_RECORDS,\n        payload: records\n    }\n}\n\nexport const setRecordAnalytics = (data) => {\n    return {\n        type: actions.SET_ANALYTICS,\n        payload: data\n    }\n}\n\nexport const setIsError = (isError) => {\n    return {\n        type: actions.SET_IS_ERROR,\n        payload: isError\n    }\n}\n\nexport const setErrorMessage = (error) => {\n    return {\n        type: actions.SET_ERROR_MESSAGE,\n        payload: error\n    }\n}\n\nexport const setIsLoading = (isLoading) => {\n    return {\n        type: actions.SET_IS_LOADING,\n        payload: isLoading\n    }\n}","import React from 'react';\n\nimport './loader.css';\n\nconst Loader = () => {\nreturn (\n    <div className='loader'>\n        <span className='loaderText'>Loading...</span>\n    </div>\n);\n}\nexport default Loader;","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport HighChart from '../../UI/highChart/highChart';\nimport * as actions from '../../redux-store/actions/actions';\nimport months from '../../utils/monthConst';\nimport Loader from '../../UI/loader/loader';\nimport './analytics.css';\n\nconst Analytics = (props) => {\n\n    useEffect(() => {\n        props.getData();\n    }, []);\n\n    const pieChartOptions = {\n        chart: {\n            type: 'pie'\n        },\n        title: {\n            text: 'Pie chart'\n        },\n        series: [\n            {\n                name: 'Records',\n                data: [{\n                    name: 'Active',\n                    y: props.activeRecords\n                },\n                {\n                    name: 'Inactive',\n                    y: props.inActiveRecords\n                }]\n            }\n        ]\n    };\n\n    const lineChartOptions = {\n        chart: {\n            type: 'line'\n        },\n        xAxis: {\n            categories: months\n        },\n        title: {\n            text: 'Line chart'\n        },\n        series: [{\n            name: 'Active Records',\n            data: props.stats\n        }]\n    };\n\n    return (\n        <Fragment>\n            {props.isLoading && <Loader />}\n            <p>Analytics of the records in DB</p>\n            {props.isError && <div className='errorMsg'>{props.errorMessage}</div>}\n            <div className='chartsGroup'>\n                <HighChart options={pieChartOptions} />\n                <HighChart options={lineChartOptions} />\n            </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        activeRecords: state.activeRecords,\n        inActiveRecords: state.inActiveRecords,\n        isLoading: state.isLoading,\n        isError: state.isError,\n        errorMessage: state.errorMessage,\n        stats: state.stats\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getData: () => dispatch(actions.getData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analytics);","import React, { Fragment, useState } from 'react';\n\nimport './table.css';\n\nlet from = 0;\nlet pageNo = 1;\nconst Table = (props) => {\n\n    const paginationLength = 10;\n    const maxPages = Math.ceil(props.rows.length / paginationLength);\n    let to = (pageNo * paginationLength) < props.rows.length ? (pageNo * paginationLength) : props.rows.length;\n    const [rowsToDisplay, setRowsToDisplay] = useState('');\n    let table = <div> No records Found</div>;\n    let headers = Object.keys(props.rows[0] || {})\n\n    const showPrevious = () => {\n        if (pageNo > 1) {\n            pageNo = pageNo - 1;\n            from = (paginationLength * (pageNo - 1));\n            to = (pageNo * paginationLength) < props.rows.length ? (pageNo * paginationLength) : props.rows.length;\n            setRowsToDisplay(props.rows.slice(from, to));\n        }\n    }\n\n    const showNext = () => {\n        if (pageNo < maxPages) {\n            from = (paginationLength * pageNo);\n            pageNo = pageNo + 1;\n            to = (pageNo * paginationLength) < props.rows.length ? (pageNo * paginationLength) : props.rows.length;\n            setRowsToDisplay(props.rows.slice(from, to));\n        }\n    }\n    if (props.rows.length) {\n        table =\n            <Fragment>\n                <div className='tableContainer'>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                {headers.map((header, index) => <th key={index}>{header}</th>)}\n                                <th colSpan='2'>\n                                    Actions\n                            </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.rows.slice(from, to).map(row => <tr key={row['Id']}>\n                                {headers.map((header, index) => <td key={index}>{row[header]}</td>)}\n                                <td><span className='action' onClick={() => props.onExpiryClick(row['Id'])}>Expire</span></td>\n                                <td><span className='action' onClick={() => props.onDeleteClick(row['Id'])}>Delete</span></td>\n                            </tr>)}\n                        </tbody>\n                    </table>\n                </div >\n                <div className='pagination'>\n                    showing {from + 1} - {to} of {props.rows.length}\n                    <span className='paginationAction' onClick={() => { showPrevious() }}>Previous</span>\n                    <span className='paginationAction' onClick={() => { showNext() }}>Next</span>\n                </div>\n            </Fragment>\n    }\n\n    return (\n         table\n    );\n}\n\nexport default Table;","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Table from '../../UI/table/table';\nimport Loader from '../../UI/loader/loader';\nimport * as actions from '../../redux-store/actions/actions';\n\nconst List = (props) => {\n    useEffect(() => {\n        props.getData();\n    }, []);\n\n    return (\n        <Fragment>\n            {props.isLoading && <Loader />}\n            <p>List of records in DB</p>\n            {props.isError && <div className='errorMsg'>{props.errorMessage}</div>}\n            <Table\n                rows={props.records}\n                onExpiryClick={(id) => { props.onExpiryClick(id)}}\n                onDeleteClick={(id) => { props.onDeleteClick(id)}}\n                onGetData={() => { props.getData()}}\n            ></Table>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        records: state.records,\n        isLoading: state.isLoading,\n        isError: state.isError,\n        errorMessage: state.errorMessage\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getData: () => dispatch(actions.getData()),\n        onExpiryClick: (id) => dispatch(actions.onExpireDataById(id)),\n        onDeleteClick: (id) => dispatch(actions.onDeleteDataById(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n// export default List;\n","import React, { Fragment } from 'react';\n\nimport './button.css';\n\nconst Button = (props) => {\nreturn (\n    <Fragment>\n        <button onClick={props.clickHandler} className='customButton'>{props.label}</button>\n    </Fragment>\n);\n}\nexport default Button;","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../UI/button/button';\nimport * as actions from '../../redux-store/actions/actions';\nimport Loader from '../../UI/loader/loader';\nimport './dashboard.css';\n\nconst Dashboard = (props) => {\n    return (\n        <Fragment>\n            {props.isLoading && <Loader />}\n            <p>Dashboard to create and manipulate records in DB</p>\n            {props.isError && <div className='errorMsg'>{props.errorMessage}</div>}\n            <div className='buttonContainer'>\n                <Button label={'Generate data'} clickHandler={() => { props.onGenerateData() }} />\n                <Button label={'Reset data'} clickHandler={() => { props.onResetData() }} />\n                <Button label={'Delete data'} clickHandler={() => { props.onDeleteData() }} />\n                <Button label={'Expire data'} clickHandler={() => { props.onExpireData() }} />\n            </div>\n\n            <div className='info'>\n                <span>Note</span>\n                <ul>\n                    <li>Generate Data button creates 10,000 rows of default values in DB</li>\n                    <li>Reset Data button deletes rows from DB</li>\n                    <li>Delete Data button sets all the records with 'Active Indicator' to 'N'</li>\n                    <li>Expire Data button sets all the records with 'Expiry date' to current date</li>\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.isLoading,\n        isError: state.isError,\n        errorMessage: state.errorMessage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGenerateData: () => dispatch(actions.onGenerateData()),\n        onResetData: () => dispatch(actions.onResetData()),\n        onDeleteData: () => dispatch(actions.onDeleteData()),\n        onExpireData: () => dispatch(actions.onExpireData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n// export default Dashboard;","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Analytics from '../analytics/analytics';\nimport List from '../list/list';\nimport Dashboard from '../dashboard/dashboard';\n\nconst Router = () => {\nreturn (\n    <Fragment>\n        <Route path='/' component={Dashboard} exact/>\n        <Route path='/analytics' component={Analytics} />\n        <Route path='/list' component={List} />\n    </Fragment>\n);\n}\nexport default Router;","import React, {Component, Fragment} from 'react';\nimport Navigation from '../../components/navigation/navigation';\nimport Router from '../../components/router/router';\nclass Layout extends Component {\nrender() {\nreturn (\n    <Fragment>\n        <Navigation />\n        <Router />\n    </Fragment>\n);\n}\n}\nexport default Layout;","import { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Layout from './container/layout/layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Layout />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const updateState = (state, update) => {\n    return {\n        ...state,\n        ...update\n    }\n}\n\nexport default updateState;","import * as actions from '../acitonTypes';\nimport updateState from '../../utils/updateState';\n\nconst initialState = {\n    records: [],\n    activeRecords: 0,\n    inActiveRecords: 0,\n    isLoading: false,\n    isError: false,\n    errorMessage: null\n}\n\nconst recordReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_RECORDS: return updateState(state, { records: action.payload })\n        case actions.SET_IS_LOADING: return updateState(state, { isLoading: action.payload })\n        case actions.SET_IS_ERROR: return updateState(state, { isError: action.payload })\n        case actions.SET_ERROR_MESSAGE: return updateState(state, { errorMessage: action.payload })\n        case actions.SET_ANALYTICS: return updateState(state, { ...action.payload })\n        default: return state;\n    }\n}\n\nexport default recordReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport recordReducer from './redux-store/reducer/listReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store = createStore(recordReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}